-- This script was generated by a beta version of the ERD tool in pgAdmin 4.
-- Please log an issue at https://redmine.postgresql.org/projects/pgadmin4/issues/new if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE public.candidate_cv
(
    id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 384897 CACHE 1 ),
    candidate_id integer NOT NULL,
    photo_link character varying NOT NULL,
    linkedin_link character varying NOT NULL,
    github_link character varying NOT NULL,
    description text NOT NULL,
    creadet_date date,
    is_active boolean,
    PRIMARY KEY (id)
);

CREATE TABLE public.candidates
(
    user_id integer NOT NULL,
    first_name character varying NOT NULL,
    last_name character varying NOT NULL,
    national_id character varying NOT NULL,
    birth_year character varying NOT NULL,
    PRIMARY KEY (user_id)
);

CREATE TABLE public.city
(
    id integer NOT NULL,
    city_name character varying NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE public.employers
(
    user_id integer NOT NULL,
    company_name character varying NOT NULL,
    website character varying NOT NULL,
    phone_number character varying NOT NULL,
    PRIMARY KEY (user_id)
);

CREATE TABLE public.employess
(
    user_id integer NOT NULL,
    first_name character varying NOT NULL,
    last_name character varying NOT NULL,
    PRIMARY KEY (user_id)
);

CREATE TABLE public.job_experience
(
    id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 2 MINVALUE 1 MAXVALUE 32546584 CACHE 1 ),
    company_name character varying NOT NULL,
    position_name integer NOT NULL,
    cv_id integer NOT NULL,
    starting_year character varying NOT NULL,
    finish_year character varying,
    PRIMARY KEY (id)
);

CREATE TABLE public.job_postings
(
    id integer NOT NULL,
    employer_id integer NOT NULL,
    job_position_id integer NOT NULL,
    description text NOT NULL,
    city_id integer NOT NULL,
    number_of_open_positions character varying NOT NULL,
    is_active boolean NOT NULL,
    min_salary double precision,
    max_salary double precision,
    application_deadline character varying NOT NULL,
    release_date date NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE public.languages
(
    id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 2 MINVALUE 1 MAXVALUE 3546564 CACHE 1 ),
    language_name character varying NOT NULL,
    language_level character varying NOT NULL,
    cv_id integer,
    PRIMARY KEY (id)
);

CREATE TABLE public.positions
(
    id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 3854567 CACHE 1 ),
    position_name character varying NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE public.school_name_list
(
    id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 4 MINVALUE 1 MAXVALUE 3545845 CACHE 1 ),
    school_name character varying NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE public.schools
(
    id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 4 MINVALUE 1 MAXVALUE 3543652 CACHE 1 ),
    school_name character varying NOT NULL,
    section character varying NOT NULL,
    cv_id integer NOT NULL,
    starting_year character varying,
    finish_year character varying,
    PRIMARY KEY (id)
);

CREATE TABLE public.section
(
    id integer NOT NULL,
    section_name character varying NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE public.technology
(
    id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 5 MINVALUE 1 MAXVALUE 354684 CACHE 1 ),
    cv_id integer NOT NULL,
    technology_id integer NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE public.technology_name_list
(
    id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 7 MINVALUE 1 MAXVALUE 354864765 CACHE 1 ),
    name character varying NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE public.users
(
    id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 32654896 CACHE 1 ),
    email character varying(50) NOT NULL,
    password character varying(25) NOT NULL,
    verify boolean,
    PRIMARY KEY (id)
);

CREATE TABLE public.users_verify
(
    id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 356484 CACHE 1 ),
    user_id integer NOT NULL,
    verify_code character varying,
    is_confirmed boolean,
    created_date date,
    confirmed_date date,
    PRIMARY KEY (id)
);

ALTER TABLE public.candidate_cv
    ADD FOREIGN KEY (candidate_id)
    REFERENCES public.candidates (user_id)
    NOT VALID;


ALTER TABLE public.candidates
    ADD FOREIGN KEY (user_id)
    REFERENCES public.users (id)
    NOT VALID;


ALTER TABLE public.employers
    ADD FOREIGN KEY (user_id)
    REFERENCES public.users (id)
    NOT VALID;


ALTER TABLE public.employess
    ADD FOREIGN KEY (user_id)
    REFERENCES public.users (id)
    NOT VALID;


ALTER TABLE public.job_experience
    ADD FOREIGN KEY (cv_id)
    REFERENCES public.candidate_cv (id)
    NOT VALID;


ALTER TABLE public.job_postings
    ADD FOREIGN KEY (city_id)
    REFERENCES public.city (id)
    NOT VALID;


ALTER TABLE public.job_postings
    ADD FOREIGN KEY (employer_id)
    REFERENCES public.employers (user_id)
    NOT VALID;


ALTER TABLE public.job_postings
    ADD FOREIGN KEY (job_position_id)
    REFERENCES public.positions (id)
    NOT VALID;


ALTER TABLE public.languages
    ADD FOREIGN KEY (cv_id)
    REFERENCES public.candidate_cv (id)
    NOT VALID;


ALTER TABLE public.schools
    ADD FOREIGN KEY (cv_id)
    REFERENCES public.candidate_cv (id)
    NOT VALID;


ALTER TABLE public.technology
    ADD FOREIGN KEY (cv_id)
    REFERENCES public.candidate_cv (id)
    NOT VALID;


ALTER TABLE public.users_verify
    ADD FOREIGN KEY (user_id)
    REFERENCES public.users (id)
    NOT VALID;

END;
